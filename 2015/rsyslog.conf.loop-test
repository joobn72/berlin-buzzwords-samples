module(load="/usr/local/lib64/rsyslog/imfile.so")
module(load="/usr/local/lib64/rsyslog/omelasticsearch.so")

global(
  processInternalMessages="off"
)

input(type="imfile"
      File="/opt/example.log.parsed"
      Tag="tag1"
      stateFile="/tmp/rsyslog-state")

main_queue(
  queue.size="100000"   # capacity of the main queue
  queue.dequeuebatchsize="1000"  # process messages in batches of 1000 and move them to the action queues
  queue.workerthreads="4"  # 4 threads for the main queue
)

template(name="json"
         type="list") {
             property(name="msg")
         }

template(name="json_file"
         type="list") {
             property(name="msg")
             constant(value="\n")
         }


action(name="send-to-es"
      type="omelasticsearch"
      template="json"  # use the template defined earlier
      searchIndex="test-index"
      searchType="test-type"
      bulkmode="on"                   # use the Bulk API
      action.resumeretrycount="-1"  # retry indefinitely if ES is unreachable
)

action(name="loop"
  type="omfile"
  file="/opt/example.log.parsed"
  template="json_file"
)
